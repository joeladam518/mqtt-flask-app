##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration

server {
    listen 80;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;

    server_name mqttflask.joelhaker.com;
    root "/var/www/mqttflask/site";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    charset utf-8;
    sendfile on;

    access_log /var/log/nginx/mqttflask.app-access.log;
    error_log  /var/log/nginx/mqttflask.app-error.log error;

    # location / {
    #     try_files $uri @app;
    # }

    location / {
        return 444;
    }

    location /favicon.ico {
        return 444;
    }

    location /mqtt {
        include uwsgi_params;
        uwsgi_pass unix:/tmp/mqttflask/mqttflask.sock;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    location ~ /\.ht {
        deny all;
    }
}
